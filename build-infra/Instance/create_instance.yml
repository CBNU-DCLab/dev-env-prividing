# Basic provisioning example
- name: Ansible test
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python2
  tasks:
    - name: create VPC
      ec2_vpc_net:
        name: Ansible VPC
        cidr_block: 10.1.0.0/16
        region: ap-northeast-2
        state: present
      register: vpc_result
      # vars:
      #   ansible_python_interpreter: /usr/bin/python3

    - name: Create Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: ap-northeast-2
        state: present
        tags:
          Name: seoul_igw
      register: gateway_result
      # vars:
      #   ansible_python_interpreter: /usr/bin/python3
      #
    - name: Create Public Subnet
      ec2_vpc_subnet:
        cidr: 10.1.0.0/24
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: ap-northeast-2
        az: ap-northeast-2a
        map_public: yes
        state: present
      register: subnet_result
    
    - name: Create Routing Table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: ap-northeast-2
        state: present
        subnets: ["{{ subnet_result.subnet.id }}"]
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ gateway_result.gateway_id }}"


    - name: Create Security Group
      ec2_group:
        name: default sg
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: ap-northeast-2
        state: present
        description: allow 22, 80
        tags:
          Name: default sg
        rules:
        - proto: tcp
          ports:
          - 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          ports:
          - 80
          cidr_ip: 0.0.0.0/0

    - name: Create Seoul EC2 key
      ec2_key:
        name: ec2-seoul
        region: ap-northeast-2
      register: key_result

    - name: Save Private Key
      copy: content="{{ key_result.key.private_key }}" dest=./ec2-seoul.pem mode=0400
      when: key_result.changed

    - name: Create EC2
      ec2:
        key_name: ec2-seoul
        instance_tags:
          Name: Ansible EC2
        region: ap-northeast-2
        instance_type: t2.micro
        image: ami-0ba5cd124d7a79612 
        group: default sg
        wait: yes
        count: 1
        vpc_subnet_id: "{{ subnet_result.subnet.id }}"
        assign_public_ip: yes